[package]
name = "stwo-web-stark"
version = "0.1.0"
authors = ["Bartosz Nowak <bartekn337@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
cairo-vm = { git = "https://github.com/lambdaclass/cairo-vm", rev = "83bfdcf", features = ["mod_builtin"], default-features = false}
hex = "0.4.3"
serde = "1.0.134"
serde_json = "1.0.134"
serde-wasm-bindgen = "0.6.5"
stwo_cairo_prover = { git = "https://github.com/starkware-libs/stwo-cairo.git", rev = "07d3a9f" }
stwo_cairo_utils = { git = "https://github.com/starkware-libs/stwo-cairo.git", rev = "07d3a9f" }
stwo-prover = { git = "https://github.com/starkware-libs/stwo", rev = "af5475cb", features = ["parallel"], default-features = false}
thiserror-no-std = "2.0.2"
wasm-bindgen = "0.2.84"
zip = { version = "2.2.2", features = ["deflate"], default-features = false}

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = 3

[package.metadata.wasm-pack.profile.release]
wasm-opt = ['-O1']